version: '3.8'

volumes:
  shared-workspace:
    name: "hadoop-distributed-file-system"
    driver: local
    
services: 
  postgres:
    restart: always
    image: debezium/postgres
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=mosip123
      - POSTGRES_DB=anonprofile
    # to activate WAL 
    # command: postgres -c wal_level=logical -c archive_mode=on -c max_wal_senders=5
    
    volumes:
      - shared-workspace:/opt/workspace
      - ./PostgresDB:/setup
  
  zookeeper:
    image: debezium/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    container_name: zookeeper
    volumes:
      - shared-workspace:/opt/workspace

  kafka:
    image: debezium/kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_EXT://localhost:29092,LISTENER_INT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      - KAFKA_LISTENERS=LISTENER_INT://0.0.0.0:9092,LISTENER_EXT://0.0.0.0:29092
      - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_INT
      - KAFAK_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - shared-workspace:/opt/workspace    
  
  connect:
    image: debezium/connect
    container_name: connect
    ports:
      - "8083:8083"
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
      - CONNECT_TOPIC_CREATION_ENABLE=true
    depends_on:
      - zookeeper
      - kafka
    volumes:
      - shared-workspace:/opt/workspace

  # jupyterlab:
  #   image: spark/jupiterlab:v1
  #   container_name: jupyterlab
  #   ports:
  #    - 8888:8888
  #   volumes:
  #    - shared-workspace:/opt/workspace
        

  spark-master:
      image: spark/sparkmaster:v1
      container_name: spark-master
      environment:
       - SPARK_MODE=master
       - SPARK_RPC_AUTHENTICATION_ENABLED=no
       - SPARK_RPC_ENCRYPTION_ENABLED=no
       - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
       - SPARK_SSL_ENABLED=no
      ports:
       - 8080:8080
       - 7077:7077
      volumes:
       - shared-workspace:/opt/workspace
       - ./src:/usr/bin/spark-2.4.0-bin-hadoop2.7/spark_scripts/
  
  spark-worker-1:
      image: spark/sparkworker:v1
      container_name: spark-worker-1
      environment:
       - SPARK_MODE=worker
       - SPARK_MASTER_URL=spark://spark:7077
       - SPARK_WORKER_MEMORY=1G
       - SPARK_WORKER_CORES=1
       - SPARK_RPC_AUTHENTICATION_ENABLED=no
       - SPARK_RPC_ENCRYPTION_ENABLED=no
       - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
       - SPARK_SSL_ENABLED=no
      ports:
       - 8081:8081
      volumes:
       - shared-workspace:/opt/workspace
      depends_on:
       - spark-master
  
  
  # spark-worker-2:
  #     image: spark/sparkworker:v1
  #     container_name: spark-worker-2
  #     environment:
  #      - SPARK_MODE=worker
  #      - SPARK_MASTER_URL=spark://spark:7077
  #      - SPARK_WORKER_MEMORY=1G
  #      - SPARK_WORKER_CORES=1
  #      - SPARK_RPC_AUTHENTICATION_ENABLED=no
  #      - SPARK_RPC_ENCRYPTION_ENABLED=no
  #      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
  #      - SPARK_SSL_ENABLED=no
  #     ports:
  #      - 8082:8081
  #     volumes:
  #      - shared-workspace:/opt/workspace
  #     depends_on:
  #      - spark-master

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    container_name: elasticsearch

    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node

    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536

    cap_add:
      - IPC_LOCK
    volumes:
      - shared-workspace:/opt/workspace
    ports:
      - 9200:9200
      - 9300:9300

  kibana:
    image: docker.elastic.co/kibana/kibana:7.4.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
